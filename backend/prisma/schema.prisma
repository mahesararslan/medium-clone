// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  name String?
  password String?
  image String?
  bio String?
  posts Post[]
  comments Comment[]
  likes Like[]
  notifications Notification[]
  createdAt DateTime @default(now())
}

model Post { 
  id String @id @default(uuid())
  title String
  content String
  shortDescription String
  published Boolean @default(false)
  author User @relation(fields: [authorId], references: [id])
  authorId String
  comments Comment[]
  likes Like[]
  notifications  Notification[]
  createdAt DateTime @default(now())
}

model Comment {
  id String @id @default(uuid())
  content String
  post Post @relation(fields: [postId], references: [id])
  postId String
  author User @relation(fields: [authorId], references: [id])
  authorId String
  createdAt DateTime @default(now())
}

model Like {
  id String @id @default(uuid())
  post Post @relation(fields: [postId], references: [id])
  postId String
  user User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
}

model Notification {
  id         String   @id @default(uuid())
  
  // Information about the user who performed the action (stored as plain fields)
  userId     String
  userName   String
  userImage  String

  // The author of the post/content (stored as a relation to the User model)
  author     User     @relation(fields: [authorId], references: [id])
  authorId   String

  // The post related to the notification
  post       Post     @relation(fields: [postId], references: [id])
  postId     String
  
  message    String
  isRead     Boolean  @default(false)
  createdAt  DateTime @default(now())
}


